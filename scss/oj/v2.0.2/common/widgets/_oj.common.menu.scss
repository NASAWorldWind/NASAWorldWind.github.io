// Copyright (c) 2014, 2016, Oracle and/or its affiliates. The Universal Permissive License (UPL), Version 1.0
// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
// WARNING: do not directly import this file, instead import the 
//          version in your base theme's directory, 
//          for example alta/widgets/_oj.alta.menu.scss
// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

@import "../../utilities/oj.utilities";

@if $includeMenuClasses != false  {
  @include module-include-once("common.menu") {

    /* menu */
    /* --------------------------------------------------------------- */
    
    /* defines the stacking context for the menu */
    .oj-menu-layer {
      @extend .oj-component-layer;
      z-index: $popupZindex;
    }
    
    /* top-level menu (component root node) and all submenus */
    .oj-menu {
        @extend .oj-component-popup;
        color: $textColor;
        border: 1px solid $menuBorderColor;
        border-radius: $menuBorderRadius;
        background: $menuBgColor;
        list-style: none;
        padding-left: 0;
        padding-right: 0;
        padding-top: $menuPadding;
        padding-bottom: $menuPadding;
        margin: 0;
        display: inline-block; 
        font-size: $fontSize;
        white-space: nowrap;
        
        // prevent iOS from applying tap-highlight-color that's darker than the "pressed" color in the spec
        -webkit-tap-highlight-color: transparent;
    }
    
    .oj-menu:focus {
        outline:none; // suppress native focus ring, e.g. desktop Chrome's blue outline
    }

    /* top-level menu (component root node) but not submenus */
    .oj-menu.oj-component {
        @include oj-box-shadow($menuBoxShadow);
    }
    
    /* submenus but not top-level menu */
    .oj-menu.oj-menu-submenu { 
        position: absolute; 
        @include oj-box-shadow($menuSubmenuBoxShadow);
    }

    .oj-menu-item { 
        margin: 0; 
        padding: 0; 
        width: 100%; 
    }
    
    /* Horizontal divider between groups of menu items */
    .oj-menu-divider {
        margin: $menuDividerMargin;
        height: 0;
        font-size: 0;
        line-height: 0;
        border-width: $menuDividerBorderWidth 0 0 0; 
        border-color: $menuDividerBorderColor;
        border-style: solid;
    }

    // > and (space) select the same anchors
    .oj-menu-item > a { 
        // relative positioning so that the absolutely positioned submenu icons are 
        // positioned relative to the <a>
        position: relative;
        text-decoration: none; 
        // Due to Bug 21164454, i.e. an a11y platform bug with Apple's VoiceOver in iOS 8 and iOS 9 at the time of writing, we can't use
        // flex display in conjuction with menu parent container being absolutely positioned. Use display block instead until Apple
        // fixes this bug:
        // @include oj-display-flex-property();
        display: block;
        line-height: $menuItemLineHeight;
        font-weight: normal; 
        color: $menuItemTextColor;
        
        @if $menuItemBorderColor != null  {
            border-top-width: 1px;
            border-top-color: $menuItemBorderColor;
            border-top-style: solid;
        }
    }
    
    // last menu item
    .oj-menu-item:last-child > a {
        // to facilitate the "focused last menu item" bottom border theming below
        @if $menuItemBorderColor != null and $menuPadding {
            border-bottom-width: 1px;
            border-bottom-color: transparent;
            border-bottom-style: solid;
        }
    }

    /* For each menu and submenu, either oj-menu-icons or oj-menu-text-only is applied to the menu, depending on whether at 
       least one menu item in the menu (excluding its submenus) has an icon (not submenu icon).  These classes facilitate (say)
       leaving space for a column of icons iff at least one item has an icon, and doing so for each menu/submenu independently. */

    // need > rather than (space) to avoid matching the items of a submenu without icons whose ancestor menu has icons
    .oj-menu-icons > .oj-menu-item > a { 
        // leave space at start of item for icon plus spacing before/after it.  
        @include oj-ltr() {
            padding-left: calc(#{$menuIconToEdgePadding} + #{$menuIconSize} + #{$menuTextToIconPadding});
        }
        @include oj-rtl() {
            padding-right: calc(#{$menuIconToEdgePadding} + #{$menuIconSize} + #{$menuTextToIconPadding});
        }
    }

    // need > rather than (space) to avoid matching the items of a submenu with icons whose ancestor menu lacks icons
    .oj-menu-text-only > .oj-menu-item > a { 
        justify-content: $menuTextOnlyJustifyContent;

        @include oj-ltr() {
            @if $menuTextOnlyJustifyContent == center {
                // set menu item start padding same as end padding, so that centered text is really centered.
                padding-left: calc(16px + #{2*$menuSubmenuIconPadding});
            } @else {
                padding-left: $menuTextToEdgePadding;
            }
        }
        @include oj-rtl() {
            @if $menuTextOnlyJustifyContent == center {
                // set menu item start padding same as end padding, so that centered text is really centered.
                padding-right: calc(16px + #{2*$menuSubmenuIconPadding});
            } @else {
                padding-right: $menuTextToEdgePadding;
            }
        }
    }

    // need > rather than (space) to avoid selecting (suppressing the border of) menu items having
    // an ancestor menu item that follows a group divider
    .oj-menu-divider + .oj-menu-item > a { 
        // In themes with borders between every menu item, don't put one immediately after a group divider
        border-top-width: 0;
    }
    
    // use > rather than (space) so that themers wanting to theme focus and focus-ancestor separately 
    // don't have to contend with the fact that, whenever a submenu item is focused, our 
    // "oj-focus-ancestor a" selector unintentionally selects the ".oj-focus > a" element too.
    .oj-menu-item.oj-focus          > a,
    .oj-menu-item.oj-focus-ancestor > a {
        background: $menuItemBgColorFocus;
    }

    // border before and after a focused (or focus-ancestor) item
    .oj-menu-item.oj-focus                          > a,
    .oj-menu-item.oj-focus-ancestor                 > a,
    .oj-menu-item.oj-focus          + .oj-menu-item > a,
    .oj-menu-item.oj-focus-ancestor + .oj-menu-item > a {
        border-top-color: $menuItemBorderColorFocus;
    }

    // when the last menu item is focused, it needs a bottom border in themes that put borders on menu items, 
    // and that have a space between that menu item and the bottom of the menu 
    .oj-menu-item:last-child.oj-focus          > a,
    .oj-menu-item:last-child.oj-focus-ancestor > a {
        @if $menuItemBorderColor != null and $menuPadding {
            border-bottom-color: $menuItemBorderColorFocus;
        }
    }

    // disabled menu items can't have open submenus, so > and (space) are equivalent
    .oj-menu.oj-disabled .oj-menu-item > a,
    .oj-menu-item.oj-disabled > a {  
        cursor: default; 
        color: $menuItemTextColorDisabled; 
    }

    /* menu item icons (not submenu icons) */

    .oj-menu-item-icon {
        color: $menuIconColor;
        // Due to Bug 21164454, we can't use display flex for elements with selector .oj-menu-item > a (see above) so we also can't use align-self. 
        // Use transform instead to vertically center icon until Apply fixes their VO bug.
        // @include oj-align-self-property(center);
        position: absolute;
        top: 50%;
        -webkit-transform: translateY(-50%);
        transform: translateY(-50%);
        
        // negative start margin so that (a) icon is shifted startward into the space left for it by the menu item's 
        // start padding, and (b) total of icon's size, start margin, and end margin is 0, so that start edge of text 
        // is in the same horiz location whether there's an icon or not, so text lines up across menu items with and 
        // without icons.
        @include oj-ltr() {
            margin-left:   calc(-#{$menuIconSize} - #{$menuTextToIconPadding});
            margin-right:  $menuTextToIconPadding;
        }
        
        @include oj-rtl() {
            margin-right:  calc(-#{$menuIconSize} - #{$menuTextToIconPadding});
            margin-left:   $menuTextToIconPadding;
        }
    
    }
    
    /* menu item icons (not submenu icons) */
    // Need extra specificity to overcome sizes in the icons themselves, e.g. iOS/Android want to 
    // show 16px icons at 24px.
    .oj-menu-item .oj-menu-item-icon {
        font-size: $menuIconSize;
    }

    .oj-menu.oj-disabled .oj-menu-item-icon,
    .oj-menu-item.oj-disabled .oj-menu-item-icon {
        color: $menuIconColorDisabled;
        opacity: $menuIconOpacityDisabled;
    }

    .oj-menu-submenu-icon {
        position: absolute; 
        padding-top: calc(#{$menuItemLineHeight/2}rem - 28px/2); // To center.  28px is icon height.
        line-height: 1.8;
        height: auto;
        
        @include oj-ltr() {
            right: $menuSubmenuIconPadding; 
        }
        @include oj-rtl() {
            left: $menuSubmenuIconPadding;
        }

        color: $menuSubmenuIconColor;
    }
    
    // Applied to context menu launcher on devices that support touch.  Not for launcher of other popup menus, or menu itself.
    // See comments in baseComponent for details.
    .oj-menu-context-menu-launcher {
        // Prevent native context menu / callout from appearing in Mobile Safari.  Apparently needed only for links, whose native CM has "Open in New Tab", etc.
        // Per v1.1.0 Release Notes, WebKit bug 136685 breaks this in iOS8.1-8.2, but 7, 8.3, and Android Chrome are fine.  webkit.org/show_bug.cgi?id=136685
        -webkit-touch-callout: none;
        
        // In Mobile Safari and Android Chrome, prevents press-hold from selecting the text and showing the selection handles and (in Safari) the Copy/Define callout.
        // Per v1.1.0 Release Notes, in iOS7 only, this doesn't work well: the selection UI just appears for a neighboring region instead.  Not even setting the style 
        // on the document helps, as the style seems not to inherit.  iOS8 and Android Chrome are fine.
        @include oj-user-select-property(none);
    }
        
    // High Contrast
    //--------------------------------------------
    .oj-hicontrast .oj-menu-item.oj-focus          > a,
    .oj-hicontrast .oj-menu-item.oj-focus-ancestor > a {
        outline: dotted 3px #000;
    }

    .oj-hicontrast .oj-menu-item.oj-focus.oj-disabled > a {
        outline: dotted 1px #000;
    }

  }
}